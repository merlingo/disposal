import { createSlice } from '@reduxjs/toolkit';

const authenticated = localStorage.getItem('authenticated');
export const slice = createSlice({
  name: 'auth',
  initialState:  {
    isFetching: false,
    isAuthenticated: authenticated,
    username:"",
    token:"",
    message:"",
},
  reducers: {
    login:
    {
        reducer: (state,action) => {
            // Redux Toolkit allows us to write "mutating" logic in reducers. It
            // doesn't actually mutate the state because it uses the immer library,
            // which detects changes to a "draft state" and produces a brand new
            // immutable state based off those changes
            state.isFetching = true;
            state.email=action.payload.email;

            console.log("reducers login prepare:"+ JSON.stringify(action));
          },
        prepare: (credentials) =>{
            console.log("action login prepare:"+ JSON.stringify(credentials));
            return {
                payload:{
                    email:credentials.email,
                    request: {
                        url: "/webapi/login/",
                        method: 'POST',
                        data: {
                          email: credentials.email,
                          password: credentials.password
                        }
                      }
                }
            }
        }
    } ,
    login_SUCCESS: (state,action) => {
      state.isAuthenticated = true;
      const res = action.payload.data;
      console.log( "login success : "+JSON.stringify(action.payload.data));
      localStorage.setItem('authenticated',res.token);
;
      state.message = res.message;
    },
    login_FAIL: (state,action) => {
      console.log("login faiuler:"+JSON.stringify(action.error.response));
        state.message = action.error.response.data;
    },
    logout:(state,action)=> {
        state.isAuthenticated=false;
        console.log( "logout : " + JSON.stringify(state)+"   action: "+action);
        localStorage.removeItem('authenticated');
    }
  },

});

export const { login, login_SUCCESS, login_FAILURE, logout} = slice.actions;


// The function below is called a selector and allows us to select a value from
// the state. Selectors can also be defined inline where they're used instead of
// in the slice file. For example: `useSelector((state) => state.counter.value)`
export const selectCredentials = state => state.auth.credentials;

export default slice.reducer;
